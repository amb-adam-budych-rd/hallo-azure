name: CI Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  id-token: write
  contents: read
jobs:
  build:
    name: Build Main Branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Build Complete with Gradle
        run: ./gradlew build

      - name: Copy Jar file
        run: mv $(ls build/libs/*SNAPSHOT.jar) ./app.jar

      - uses: actions/upload-artifact@master
        with:
          name: jar-file
          path: app.jar

  build-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: jar-file
          path: app.jar

#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2

#      - name: 'Login via Azure CLI'
#        uses: azure/login@v2
#        with:
#          client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/gs-rest-service:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/gs-rest-service:${{ github.sha }}



