name: CI Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  id-token: write
  contents: read
jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Build Complete with Gradle
        run: ./gradlew build

      - name: Copy Jar file
        run: mv $(ls build/libs/*SNAPSHOT.jar) ./app.jar

      - uses: actions/upload-artifact@master
        with:
          name: jar-file
          path: app.jar

  build-image:
    name: 'Build container and push to ACR'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@master
        with:
          name: jar-file
          path: app.jar

      - uses: paulhatch/semantic-version@v5.4.0
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
          major_regexp_flags: ""
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
          minor_regexp_flags: ""
          # A string to determine the format of the version output
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          namespace: my-service
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
          # If bump_each_commit is also set to true, setting this value will cause the version to increment only if the pattern specified is matched.
          bump_each_commit_patch_pattern: ""
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          search_commit_body: false
          # Prevents pre-v1.0.0 version from automatically incrementing the major version.
          # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
          enable_prerelease_mode: true
          # If enabled, diagnostic information will be added to the action output.
          debug: true
          # If true, the branch will be used to select the maximum version.
          version_from_branch: true

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AZURE_URL }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Build image and Push to ACR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.AZURE_URL }}/hallo-azure:${{ github.sha }}
